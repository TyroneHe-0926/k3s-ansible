apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: traefik-kube-system
    app.kubernetes.io/name: traefik
  name: traefik
  namespace: kube-system
spec:
  allocateLoadBalancerNodePorts: true
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: PreferDualStack
  ports:
    - name: web
      nodePort: 30187
      port: 80
      protocol: TCP
      targetPort: web
    - name: websecure
      nodePort: 30809
      port: 443
      protocol: TCP
      targetPort: websecure
    - name: traefik
      nodePort: 30899
      port: 9000
      protocol: TCP
      targetPort: traefik
  selector:
    app.kubernetes.io/instance: traefik-kube-system
    app.kubernetes.io/name: traefik
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: traefik-auth-middleware
  namespace: kube-system
spec:
  basicAuth:
    secret: traefik-auth
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  labels:
    app.kubernetes.io/instance: traefik-kube-system
    app.kubernetes.io/name: traefik
  name: traefik-dashboard
  namespace: kube-system
spec:
  entryPoints:
    - web
    - traefik
  routes:
    - kind: Rule
      match: Host(`hahafhaharpi4.local`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))
      middlewares:
        - name: traefik-auth-middleware
      services:
        - kind: TraefikService
          name: api@internal
